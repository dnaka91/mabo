---
source: crates/mabo-parser/tests/parser.rs
description: "enum Sample<T>{One@1,Two(u32@1,u64@2,T@3)@2,Three{field1:u32@1,field2:bool@2,field3:T@3}@3}"
input_file: crates/mabo-parser/tests/inputs/enum_min_ws.mabo
---
Schema {
    path: Some(
        "enum_min_ws.mabo",
    ),
    source: "enum Sample<T>{One@1,Two(u32@1,u64@2,T@3)@2,Three{field1:u32@1,field2:bool@2,field3:T@3}@3}\n",
    comment: Comment(
        [],
    ),
    definitions: [
        Enum(
            Enum {
                comment: Comment(
                    [],
                ),
                attributes: Attributes(
                    [],
                ),
                keyword: Enum,
                name: Name {
                    value: "Sample",
                },
                generics: Generics(
                    [
                        Name {
                            value: "T",
                        },
                    ],
                ),
                brace: Brace,
                variants: [
                    Variant {
                        comment: Comment(
                            [],
                        ),
                        name: Name {
                            value: "One",
                        },
                        fields: Unit,
                        id: Some(
                            Id {
                                value: 1,
                            },
                        ),
                        comma: Some(
                            Comma,
                        ),
                    },
                    Variant {
                        comment: Comment(
                            [],
                        ),
                        name: Name {
                            value: "Two",
                        },
                        fields: Unnamed(
                            Parenthesis,
                            [
                                UnnamedField {
                                    ty: Type {
                                        value: U32,
                                    },
                                    id: Some(
                                        Id {
                                            value: 1,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                UnnamedField {
                                    ty: Type {
                                        value: U64,
                                    },
                                    id: Some(
                                        Id {
                                            value: 2,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                UnnamedField {
                                    ty: Type {
                                        value: External(
                                            ExternalType {
                                                path: [],
                                                name: Name {
                                                    value: "T",
                                                },
                                                angle: None,
                                                generics: [],
                                            },
                                        ),
                                    },
                                    id: Some(
                                        Id {
                                            value: 3,
                                        },
                                    ),
                                    comma: None,
                                },
                            ],
                        ),
                        id: Some(
                            Id {
                                value: 2,
                            },
                        ),
                        comma: Some(
                            Comma,
                        ),
                    },
                    Variant {
                        comment: Comment(
                            [],
                        ),
                        name: Name {
                            value: "Three",
                        },
                        fields: Named(
                            Brace,
                            [
                                NamedField {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "field1",
                                    },
                                    colon: Colon,
                                    ty: Type {
                                        value: U32,
                                    },
                                    id: Some(
                                        Id {
                                            value: 1,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                NamedField {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "field2",
                                    },
                                    colon: Colon,
                                    ty: Type {
                                        value: Bool,
                                    },
                                    id: Some(
                                        Id {
                                            value: 2,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                NamedField {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "field3",
                                    },
                                    colon: Colon,
                                    ty: Type {
                                        value: External(
                                            ExternalType {
                                                path: [],
                                                name: Name {
                                                    value: "T",
                                                },
                                                angle: None,
                                                generics: [],
                                            },
                                        ),
                                    },
                                    id: Some(
                                        Id {
                                            value: 3,
                                        },
                                    ),
                                    comma: None,
                                },
                            ],
                        ),
                        id: Some(
                            Id {
                                value: 3,
                            },
                        ),
                        comma: None,
                    },
                ],
            },
        ),
    ],
}
