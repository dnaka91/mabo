---
source: crates/mabo-parser/tests/parser.rs
description: "/// Schema with a bit of everything, to try out more complex scenarios.\n\n/// Basic user information.\n///\n/// Uses various other `structs` and `enums` to compose the information\n/// in a **type safe** way.\nstruct User {\n    name: FullName @1,\n    /// Physical address, might not be specified by the user.\n    address: option<Address> @2,\n    age: u8 @3,\n    birthday: birthday::DayOfBirth @4,\n}\n\n/// Full name of a user.\nstruct FullName {\n    first: string @1,\n    middle: option<string> @2,\n    last: string @3,\n}\n\n/// Simple alias for convenience.\n///\n/// - Might be easier to remember.\n/// - Often referenced as this.\ntype Name = FullName;\n\nstruct Address {\n    /// Street name.\n    street: string @1,\n    /// Number of the house in the street.\n    house_no: HouseNumber @2,\n    city: string @3,\n}\n\n/// The number on the house.\n///\n/// More details can be found at [Wikipedia](https://en.wikipedia.org/wiki/House_numbering).\nenum HouseNumber {\n    /// Digit only number.\n    Digit(u16 @1) @1,\n    /// Mixed _number_ with characters like `1a`.\n    Text(string @1) @2,\n}\n\n/// Probably the max age of a human, currently.\nconst MAX_AGE: u8 = 120;\n\n\n/// Details for defining birthdays.\nmod birthday {\n    /// As the name suggests, specifies details about birthdays.\n    enum DayOfBirth {\n        Specific {\n            year: u16 @1,\n            month: Month @2,\n            day: u8 @3,\n        } @1,\n        /// The user didn't want to say.\n        Secret {\n            /// Optional info from the user about why they didn't want to\n            /// reveal their birthday.\n            reason: option<string> @1,\n        } @2,\n        /// We never asked and nobody knows.\n        Unknown @3,\n    }\n\n    /// Let's assume we only have details of people born **after** this year.\n    const MIN_YEAR: u16 = 1900;\n\n    /// Absolute maximum for a day, but might be even less depending\n    /// on the month.\n    const MAX_DAY: u8 = 31;\n\n    /// The month of the year.\n    enum Month {\n        January @1,\n        February @2,\n        March @3,\n        April @4,\n        May @5,\n        June @6,\n        July @7,\n        August @8,\n        September @9,\n        October @10,\n        November @11,\n        December @12,\n    }\n}"
input_file: crates/mabo-parser/tests/inputs/mixed.mabo
---
Schema {
    path: Some(
        "mixed.mabo",
    ),
    source: "/// Schema with a bit of everything, to try out more complex scenarios.\n\n/// Basic user information.\n///\n/// Uses various other `structs` and `enums` to compose the information\n/// in a **type safe** way.\nstruct User {\n    name: FullName @1,\n    /// Physical address, might not be specified by the user.\n    address: option<Address> @2,\n    age: u8 @3,\n    birthday: birthday::DayOfBirth @4,\n}\n\n/// Full name of a user.\nstruct FullName {\n    first: string @1,\n    middle: option<string> @2,\n    last: string @3,\n}\n\n/// Simple alias for convenience.\n///\n/// - Might be easier to remember.\n/// - Often referenced as this.\ntype Name = FullName;\n\nstruct Address {\n    /// Street name.\n    street: string @1,\n    /// Number of the house in the street.\n    house_no: HouseNumber @2,\n    city: string @3,\n}\n\n/// The number on the house.\n///\n/// More details can be found at [Wikipedia](https://en.wikipedia.org/wiki/House_numbering).\nenum HouseNumber {\n    /// Digit only number.\n    Digit(u16 @1) @1,\n    /// Mixed _number_ with characters like `1a`.\n    Text(string @1) @2,\n}\n\n/// Probably the max age of a human, currently.\nconst MAX_AGE: u8 = 120;\n\n\n/// Details for defining birthdays.\nmod birthday {\n    /// As the name suggests, specifies details about birthdays.\n    enum DayOfBirth {\n        Specific {\n            year: u16 @1,\n            month: Month @2,\n            day: u8 @3,\n        } @1,\n        /// The user didn't want to say.\n        Secret {\n            /// Optional info from the user about why they didn't want to\n            /// reveal their birthday.\n            reason: option<string> @1,\n        } @2,\n        /// We never asked and nobody knows.\n        Unknown @3,\n    }\n\n    /// Let's assume we only have details of people born **after** this year.\n    const MIN_YEAR: u16 = 1900;\n\n    /// Absolute maximum for a day, but might be even less depending\n    /// on the month.\n    const MAX_DAY: u8 = 31;\n\n    /// The month of the year.\n    enum Month {\n        January @1,\n        February @2,\n        March @3,\n        April @4,\n        May @5,\n        June @6,\n        July @7,\n        August @8,\n        September @9,\n        October @10,\n        November @11,\n        December @12,\n    }\n}\n",
    comment: Comment(
        [
            CommentLine {
                value: "Schema with a bit of everything, to try out more complex scenarios.",
            },
        ],
    ),
    definitions: [
        Struct(
            Struct {
                comment: Comment(
                    [
                        CommentLine {
                            value: "Basic user information.",
                        },
                        CommentLine {
                            value: "",
                        },
                        CommentLine {
                            value: "Uses various other `structs` and `enums` to compose the information",
                        },
                        CommentLine {
                            value: "in a **type safe** way.",
                        },
                    ],
                ),
                attributes: Attributes(
                    [],
                ),
                keyword: Struct,
                name: Name {
                    value: "User",
                },
                generics: Generics(
                    [],
                ),
                fields: Named(
                    Brace,
                    [
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "name",
                            },
                            colon: Colon,
                            ty: Type {
                                value: External(
                                    ExternalType {
                                        path: [],
                                        name: Name {
                                            value: "FullName",
                                        },
                                        angle: None,
                                        generics: [],
                                    },
                                ),
                            },
                            id: Some(
                                Id {
                                    value: 1,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                        NamedField {
                            comment: Comment(
                                [
                                    CommentLine {
                                        value: "Physical address, might not be specified by the user.",
                                    },
                                ],
                            ),
                            name: Name {
                                value: "address",
                            },
                            colon: Colon,
                            ty: Type {
                                value: Option(
                                    Angle,
                                    Type {
                                        value: External(
                                            ExternalType {
                                                path: [],
                                                name: Name {
                                                    value: "Address",
                                                },
                                                angle: None,
                                                generics: [],
                                            },
                                        ),
                                    },
                                ),
                            },
                            id: Some(
                                Id {
                                    value: 2,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "age",
                            },
                            colon: Colon,
                            ty: Type {
                                value: U8,
                            },
                            id: Some(
                                Id {
                                    value: 3,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "birthday",
                            },
                            colon: Colon,
                            ty: Type {
                                value: External(
                                    ExternalType {
                                        path: [
                                            Name {
                                                value: "birthday",
                                            },
                                        ],
                                        name: Name {
                                            value: "DayOfBirth",
                                        },
                                        angle: None,
                                        generics: [],
                                    },
                                ),
                            },
                            id: Some(
                                Id {
                                    value: 4,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                    ],
                ),
            },
        ),
        Struct(
            Struct {
                comment: Comment(
                    [
                        CommentLine {
                            value: "Full name of a user.",
                        },
                    ],
                ),
                attributes: Attributes(
                    [],
                ),
                keyword: Struct,
                name: Name {
                    value: "FullName",
                },
                generics: Generics(
                    [],
                ),
                fields: Named(
                    Brace,
                    [
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "first",
                            },
                            colon: Colon,
                            ty: Type {
                                value: String,
                            },
                            id: Some(
                                Id {
                                    value: 1,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "middle",
                            },
                            colon: Colon,
                            ty: Type {
                                value: Option(
                                    Angle,
                                    Type {
                                        value: String,
                                    },
                                ),
                            },
                            id: Some(
                                Id {
                                    value: 2,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "last",
                            },
                            colon: Colon,
                            ty: Type {
                                value: String,
                            },
                            id: Some(
                                Id {
                                    value: 3,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                    ],
                ),
            },
        ),
        TypeAlias(
            TypeAlias {
                comment: Comment(
                    [
                        CommentLine {
                            value: "Simple alias for convenience.",
                        },
                        CommentLine {
                            value: "",
                        },
                        CommentLine {
                            value: "- Might be easier to remember.",
                        },
                        CommentLine {
                            value: "- Often referenced as this.",
                        },
                    ],
                ),
                keyword: Type,
                name: Name {
                    value: "Name",
                },
                generics: Generics(
                    [],
                ),
                equal: Equal,
                target: Type {
                    value: External(
                        ExternalType {
                            path: [],
                            name: Name {
                                value: "FullName",
                            },
                            angle: None,
                            generics: [],
                        },
                    ),
                },
                semicolon: Semicolon,
            },
        ),
        Struct(
            Struct {
                comment: Comment(
                    [],
                ),
                attributes: Attributes(
                    [],
                ),
                keyword: Struct,
                name: Name {
                    value: "Address",
                },
                generics: Generics(
                    [],
                ),
                fields: Named(
                    Brace,
                    [
                        NamedField {
                            comment: Comment(
                                [
                                    CommentLine {
                                        value: "Street name.",
                                    },
                                ],
                            ),
                            name: Name {
                                value: "street",
                            },
                            colon: Colon,
                            ty: Type {
                                value: String,
                            },
                            id: Some(
                                Id {
                                    value: 1,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                        NamedField {
                            comment: Comment(
                                [
                                    CommentLine {
                                        value: "Number of the house in the street.",
                                    },
                                ],
                            ),
                            name: Name {
                                value: "house_no",
                            },
                            colon: Colon,
                            ty: Type {
                                value: External(
                                    ExternalType {
                                        path: [],
                                        name: Name {
                                            value: "HouseNumber",
                                        },
                                        angle: None,
                                        generics: [],
                                    },
                                ),
                            },
                            id: Some(
                                Id {
                                    value: 2,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "city",
                            },
                            colon: Colon,
                            ty: Type {
                                value: String,
                            },
                            id: Some(
                                Id {
                                    value: 3,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                    ],
                ),
            },
        ),
        Enum(
            Enum {
                comment: Comment(
                    [
                        CommentLine {
                            value: "The number on the house.",
                        },
                        CommentLine {
                            value: "",
                        },
                        CommentLine {
                            value: "More details can be found at [Wikipedia](https://en.wikipedia.org/wiki/House_numbering).",
                        },
                    ],
                ),
                attributes: Attributes(
                    [],
                ),
                keyword: Enum,
                name: Name {
                    value: "HouseNumber",
                },
                generics: Generics(
                    [],
                ),
                brace: Brace,
                variants: [
                    Variant {
                        comment: Comment(
                            [
                                CommentLine {
                                    value: "Digit only number.",
                                },
                            ],
                        ),
                        name: Name {
                            value: "Digit",
                        },
                        fields: Unnamed(
                            Parenthesis,
                            [
                                UnnamedField {
                                    ty: Type {
                                        value: U16,
                                    },
                                    id: Some(
                                        Id {
                                            value: 1,
                                        },
                                    ),
                                    comma: None,
                                },
                            ],
                        ),
                        id: Some(
                            Id {
                                value: 1,
                            },
                        ),
                        comma: Some(
                            Comma,
                        ),
                    },
                    Variant {
                        comment: Comment(
                            [
                                CommentLine {
                                    value: "Mixed _number_ with characters like `1a`.",
                                },
                            ],
                        ),
                        name: Name {
                            value: "Text",
                        },
                        fields: Unnamed(
                            Parenthesis,
                            [
                                UnnamedField {
                                    ty: Type {
                                        value: String,
                                    },
                                    id: Some(
                                        Id {
                                            value: 1,
                                        },
                                    ),
                                    comma: None,
                                },
                            ],
                        ),
                        id: Some(
                            Id {
                                value: 2,
                            },
                        ),
                        comma: Some(
                            Comma,
                        ),
                    },
                ],
            },
        ),
        Const(
            Const {
                comment: Comment(
                    [
                        CommentLine {
                            value: "Probably the max age of a human, currently.",
                        },
                    ],
                ),
                keyword: Const,
                name: Name {
                    value: "MAX_AGE",
                },
                colon: Colon,
                ty: Type {
                    value: U8,
                },
                equal: Equal,
                value: Literal {
                    value: Int(
                        120,
                    ),
                },
                semicolon: Semicolon,
            },
        ),
        Module(
            Module {
                comment: Comment(
                    [
                        CommentLine {
                            value: "Details for defining birthdays.",
                        },
                    ],
                ),
                keyword: Mod,
                name: Name {
                    value: "birthday",
                },
                brace: Brace,
                definitions: [
                    Enum(
                        Enum {
                            comment: Comment(
                                [
                                    CommentLine {
                                        value: "As the name suggests, specifies details about birthdays.",
                                    },
                                ],
                            ),
                            attributes: Attributes(
                                [],
                            ),
                            keyword: Enum,
                            name: Name {
                                value: "DayOfBirth",
                            },
                            generics: Generics(
                                [],
                            ),
                            brace: Brace,
                            variants: [
                                Variant {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "Specific",
                                    },
                                    fields: Named(
                                        Brace,
                                        [
                                            NamedField {
                                                comment: Comment(
                                                    [],
                                                ),
                                                name: Name {
                                                    value: "year",
                                                },
                                                colon: Colon,
                                                ty: Type {
                                                    value: U16,
                                                },
                                                id: Some(
                                                    Id {
                                                        value: 1,
                                                    },
                                                ),
                                                comma: Some(
                                                    Comma,
                                                ),
                                            },
                                            NamedField {
                                                comment: Comment(
                                                    [],
                                                ),
                                                name: Name {
                                                    value: "month",
                                                },
                                                colon: Colon,
                                                ty: Type {
                                                    value: External(
                                                        ExternalType {
                                                            path: [],
                                                            name: Name {
                                                                value: "Month",
                                                            },
                                                            angle: None,
                                                            generics: [],
                                                        },
                                                    ),
                                                },
                                                id: Some(
                                                    Id {
                                                        value: 2,
                                                    },
                                                ),
                                                comma: Some(
                                                    Comma,
                                                ),
                                            },
                                            NamedField {
                                                comment: Comment(
                                                    [],
                                                ),
                                                name: Name {
                                                    value: "day",
                                                },
                                                colon: Colon,
                                                ty: Type {
                                                    value: U8,
                                                },
                                                id: Some(
                                                    Id {
                                                        value: 3,
                                                    },
                                                ),
                                                comma: Some(
                                                    Comma,
                                                ),
                                            },
                                        ],
                                    ),
                                    id: Some(
                                        Id {
                                            value: 1,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                Variant {
                                    comment: Comment(
                                        [
                                            CommentLine {
                                                value: "The user didn't want to say.",
                                            },
                                        ],
                                    ),
                                    name: Name {
                                        value: "Secret",
                                    },
                                    fields: Named(
                                        Brace,
                                        [
                                            NamedField {
                                                comment: Comment(
                                                    [
                                                        CommentLine {
                                                            value: "Optional info from the user about why they didn't want to",
                                                        },
                                                        CommentLine {
                                                            value: "reveal their birthday.",
                                                        },
                                                    ],
                                                ),
                                                name: Name {
                                                    value: "reason",
                                                },
                                                colon: Colon,
                                                ty: Type {
                                                    value: Option(
                                                        Angle,
                                                        Type {
                                                            value: String,
                                                        },
                                                    ),
                                                },
                                                id: Some(
                                                    Id {
                                                        value: 1,
                                                    },
                                                ),
                                                comma: Some(
                                                    Comma,
                                                ),
                                            },
                                        ],
                                    ),
                                    id: Some(
                                        Id {
                                            value: 2,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                Variant {
                                    comment: Comment(
                                        [
                                            CommentLine {
                                                value: "We never asked and nobody knows.",
                                            },
                                        ],
                                    ),
                                    name: Name {
                                        value: "Unknown",
                                    },
                                    fields: Unit,
                                    id: Some(
                                        Id {
                                            value: 3,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                            ],
                        },
                    ),
                    Const(
                        Const {
                            comment: Comment(
                                [
                                    CommentLine {
                                        value: "Let's assume we only have details of people born **after** this year.",
                                    },
                                ],
                            ),
                            keyword: Const,
                            name: Name {
                                value: "MIN_YEAR",
                            },
                            colon: Colon,
                            ty: Type {
                                value: U16,
                            },
                            equal: Equal,
                            value: Literal {
                                value: Int(
                                    1900,
                                ),
                            },
                            semicolon: Semicolon,
                        },
                    ),
                    Const(
                        Const {
                            comment: Comment(
                                [
                                    CommentLine {
                                        value: "Absolute maximum for a day, but might be even less depending",
                                    },
                                    CommentLine {
                                        value: "on the month.",
                                    },
                                ],
                            ),
                            keyword: Const,
                            name: Name {
                                value: "MAX_DAY",
                            },
                            colon: Colon,
                            ty: Type {
                                value: U8,
                            },
                            equal: Equal,
                            value: Literal {
                                value: Int(
                                    31,
                                ),
                            },
                            semicolon: Semicolon,
                        },
                    ),
                    Enum(
                        Enum {
                            comment: Comment(
                                [
                                    CommentLine {
                                        value: "The month of the year.",
                                    },
                                ],
                            ),
                            attributes: Attributes(
                                [],
                            ),
                            keyword: Enum,
                            name: Name {
                                value: "Month",
                            },
                            generics: Generics(
                                [],
                            ),
                            brace: Brace,
                            variants: [
                                Variant {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "January",
                                    },
                                    fields: Unit,
                                    id: Some(
                                        Id {
                                            value: 1,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                Variant {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "February",
                                    },
                                    fields: Unit,
                                    id: Some(
                                        Id {
                                            value: 2,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                Variant {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "March",
                                    },
                                    fields: Unit,
                                    id: Some(
                                        Id {
                                            value: 3,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                Variant {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "April",
                                    },
                                    fields: Unit,
                                    id: Some(
                                        Id {
                                            value: 4,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                Variant {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "May",
                                    },
                                    fields: Unit,
                                    id: Some(
                                        Id {
                                            value: 5,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                Variant {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "June",
                                    },
                                    fields: Unit,
                                    id: Some(
                                        Id {
                                            value: 6,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                Variant {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "July",
                                    },
                                    fields: Unit,
                                    id: Some(
                                        Id {
                                            value: 7,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                Variant {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "August",
                                    },
                                    fields: Unit,
                                    id: Some(
                                        Id {
                                            value: 8,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                Variant {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "September",
                                    },
                                    fields: Unit,
                                    id: Some(
                                        Id {
                                            value: 9,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                Variant {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "October",
                                    },
                                    fields: Unit,
                                    id: Some(
                                        Id {
                                            value: 10,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                Variant {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "November",
                                    },
                                    fields: Unit,
                                    id: Some(
                                        Id {
                                            value: 11,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                                Variant {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "December",
                                    },
                                    fields: Unit,
                                    id: Some(
                                        Id {
                                            value: 12,
                                        },
                                    ),
                                    comma: Some(
                                        Comma,
                                    ),
                                },
                            ],
                        },
                    ),
                ],
            },
        ),
    ],
}
