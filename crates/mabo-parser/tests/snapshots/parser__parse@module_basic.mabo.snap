---
source: crates/mabo-parser/tests/parser.rs
description: "mod a {\n    /// Inner module\n    mod b {\n        enum Sample {\n            One @1,\n        }\n    }\n\n    struct Sample {\n        value: u32 @1,\n        inner: b::Sample @2,\n    }\n}"
input_file: crates/mabo-parser/tests/inputs/module_basic.mabo
---
Schema {
    path: Some(
        "module_basic.mabo",
    ),
    source: "mod a {\n    /// Inner module\n    mod b {\n        enum Sample {\n            One @1,\n        }\n    }\n\n    struct Sample {\n        value: u32 @1,\n        inner: b::Sample @2,\n    }\n}\n",
    comment: Comment(
        [],
    ),
    definitions: [
        Module(
            Module {
                comment: Comment(
                    [],
                ),
                keyword: Mod,
                name: Name {
                    value: "a",
                },
                brace: Brace,
                definitions: [
                    Module(
                        Module {
                            comment: Comment(
                                [
                                    CommentLine {
                                        value: "Inner module",
                                    },
                                ],
                            ),
                            keyword: Mod,
                            name: Name {
                                value: "b",
                            },
                            brace: Brace,
                            definitions: [
                                Enum(
                                    Enum {
                                        comment: Comment(
                                            [],
                                        ),
                                        attributes: Attributes(
                                            [],
                                        ),
                                        keyword: Enum,
                                        name: Name {
                                            value: "Sample",
                                        },
                                        generics: None,
                                        brace: Brace,
                                        variants: Punctuated {
                                            values: [],
                                            last: (
                                                Variant {
                                                    comment: Comment(
                                                        [],
                                                    ),
                                                    name: Name {
                                                        value: "One",
                                                    },
                                                    fields: Unit,
                                                    id: Some(
                                                        Id {
                                                            value: 1,
                                                        },
                                                    ),
                                                },
                                                Some(
                                                    Comma,
                                                ),
                                            ),
                                        },
                                    },
                                ),
                            ],
                        },
                    ),
                    Struct(
                        Struct {
                            comment: Comment(
                                [],
                            ),
                            attributes: Attributes(
                                [],
                            ),
                            keyword: Struct,
                            name: Name {
                                value: "Sample",
                            },
                            generics: None,
                            fields: Named(
                                Brace,
                                Punctuated {
                                    values: [
                                        (
                                            NamedField {
                                                comment: Comment(
                                                    [],
                                                ),
                                                name: Name {
                                                    value: "value",
                                                },
                                                colon: Colon,
                                                ty: Type {
                                                    value: U32,
                                                },
                                                id: Some(
                                                    Id {
                                                        value: 1,
                                                    },
                                                ),
                                            },
                                            Comma,
                                        ),
                                    ],
                                    last: (
                                        NamedField {
                                            comment: Comment(
                                                [],
                                            ),
                                            name: Name {
                                                value: "inner",
                                            },
                                            colon: Colon,
                                            ty: Type {
                                                value: External(
                                                    ExternalType {
                                                        path: [
                                                            (
                                                                Name {
                                                                    value: "b",
                                                                },
                                                                DoubleColon,
                                                            ),
                                                        ],
                                                        name: Name {
                                                            value: "Sample",
                                                        },
                                                        angle: None,
                                                        generics: None,
                                                    },
                                                ),
                                            },
                                            id: Some(
                                                Id {
                                                    value: 2,
                                                },
                                            ),
                                        },
                                        Some(
                                            Comma,
                                        ),
                                    ),
                                },
                            ),
                        },
                    ),
                ],
            },
        ),
    ],
}
