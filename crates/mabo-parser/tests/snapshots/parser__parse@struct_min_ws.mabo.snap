---
source: crates/mabo-parser/tests/parser.rs
description: "struct Sample<T>{a:u32@1,b:bool@2,c:T@3}"
input_file: crates/mabo-parser/tests/inputs/struct_min_ws.mabo
---
Schema {
    path: Some(
        "struct_min_ws.mabo",
    ),
    source: "struct Sample<T>{a:u32@1,b:bool@2,c:T@3}\n",
    comment: Comment(
        [],
    ),
    definitions: [
        Struct(
            Struct {
                comment: Comment(
                    [],
                ),
                attributes: Attributes(
                    [],
                ),
                keyword: Struct,
                name: Name {
                    value: "Sample",
                },
                generics: Some(
                    Generics {
                        angle: Angle,
                        types: Punctuated {
                            values: [],
                            last: (
                                Name {
                                    value: "T",
                                },
                                None,
                            ),
                        },
                    },
                ),
                fields: Named(
                    Brace,
                    Punctuated {
                        values: [
                            (
                                NamedField {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "a",
                                    },
                                    colon: Colon,
                                    ty: Type {
                                        value: U32,
                                    },
                                    id: Some(
                                        Id {
                                            value: 1,
                                        },
                                    ),
                                },
                                Comma,
                            ),
                            (
                                NamedField {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "b",
                                    },
                                    colon: Colon,
                                    ty: Type {
                                        value: Bool,
                                    },
                                    id: Some(
                                        Id {
                                            value: 2,
                                        },
                                    ),
                                },
                                Comma,
                            ),
                        ],
                        last: (
                            NamedField {
                                comment: Comment(
                                    [],
                                ),
                                name: Name {
                                    value: "c",
                                },
                                colon: Colon,
                                ty: Type {
                                    value: External(
                                        ExternalType {
                                            path: [],
                                            name: Name {
                                                value: "T",
                                            },
                                            angle: None,
                                            generics: None,
                                        },
                                    ),
                                },
                                id: Some(
                                    Id {
                                        value: 3,
                                    },
                                ),
                            },
                            None,
                        ),
                    },
                ),
            },
        ),
    ],
}
