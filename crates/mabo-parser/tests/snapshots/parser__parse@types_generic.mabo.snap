---
source: crates/mabo-parser/tests/parser.rs
description: "struct Sample {\n    f1: vec<u32> @1,\n    f2: hash_map<u32, string> @2,\n    f3: hash_set<u32> @3,\n    f4: option<u32> @4,\n    f5: non_zero<u32> @5,\n}\n\nstruct SampleUnnamed(\n    vec<u32> @1,\n    hash_map<u32, string> @2,\n    hash_set<u32> @3,\n    option<u32> @4,\n    non_zero<u32> @5,\n)"
input_file: crates/mabo-parser/tests/inputs/types_generic.mabo
---
Schema {
    path: Some(
        "types_generic.mabo",
    ),
    source: "struct Sample {\n    f1: vec<u32> @1,\n    f2: hash_map<u32, string> @2,\n    f3: hash_set<u32> @3,\n    f4: option<u32> @4,\n    f5: non_zero<u32> @5,\n}\n\nstruct SampleUnnamed(\n    vec<u32> @1,\n    hash_map<u32, string> @2,\n    hash_set<u32> @3,\n    option<u32> @4,\n    non_zero<u32> @5,\n)\n",
    comment: Comment(
        [],
    ),
    definitions: [
        Struct(
            Struct {
                comment: Comment(
                    [],
                ),
                attributes: Attributes(
                    [],
                ),
                keyword: Struct,
                name: Name {
                    value: "Sample",
                },
                generics: Generics(
                    [],
                ),
                fields: Named(
                    Brace,
                    [
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "f1",
                            },
                            colon: Colon,
                            ty: Type {
                                value: Vec {
                                    angle: Angle,
                                    ty: Type {
                                        value: U32,
                                    },
                                },
                            },
                            id: Some(
                                Id {
                                    value: 1,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "f2",
                            },
                            colon: Colon,
                            ty: Type {
                                value: HashMap {
                                    angle: Angle,
                                    key: Type {
                                        value: U32,
                                    },
                                    comma: Comma,
                                    value: Type {
                                        value: String,
                                    },
                                },
                            },
                            id: Some(
                                Id {
                                    value: 2,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "f3",
                            },
                            colon: Colon,
                            ty: Type {
                                value: HashSet {
                                    angle: Angle,
                                    ty: Type {
                                        value: U32,
                                    },
                                },
                            },
                            id: Some(
                                Id {
                                    value: 3,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "f4",
                            },
                            colon: Colon,
                            ty: Type {
                                value: Option {
                                    angle: Angle,
                                    ty: Type {
                                        value: U32,
                                    },
                                },
                            },
                            id: Some(
                                Id {
                                    value: 4,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "f5",
                            },
                            colon: Colon,
                            ty: Type {
                                value: NonZero {
                                    angle: Angle,
                                    ty: Type {
                                        value: U32,
                                    },
                                },
                            },
                            id: Some(
                                Id {
                                    value: 5,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                    ],
                ),
            },
        ),
        Struct(
            Struct {
                comment: Comment(
                    [],
                ),
                attributes: Attributes(
                    [],
                ),
                keyword: Struct,
                name: Name {
                    value: "SampleUnnamed",
                },
                generics: Generics(
                    [],
                ),
                fields: Unnamed(
                    Parenthesis,
                    [
                        UnnamedField {
                            ty: Type {
                                value: Vec {
                                    angle: Angle,
                                    ty: Type {
                                        value: U32,
                                    },
                                },
                            },
                            id: Some(
                                Id {
                                    value: 1,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                        UnnamedField {
                            ty: Type {
                                value: HashMap {
                                    angle: Angle,
                                    key: Type {
                                        value: U32,
                                    },
                                    comma: Comma,
                                    value: Type {
                                        value: String,
                                    },
                                },
                            },
                            id: Some(
                                Id {
                                    value: 2,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                        UnnamedField {
                            ty: Type {
                                value: HashSet {
                                    angle: Angle,
                                    ty: Type {
                                        value: U32,
                                    },
                                },
                            },
                            id: Some(
                                Id {
                                    value: 3,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                        UnnamedField {
                            ty: Type {
                                value: Option {
                                    angle: Angle,
                                    ty: Type {
                                        value: U32,
                                    },
                                },
                            },
                            id: Some(
                                Id {
                                    value: 4,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                        UnnamedField {
                            ty: Type {
                                value: NonZero {
                                    angle: Angle,
                                    ty: Type {
                                        value: U32,
                                    },
                                },
                            },
                            id: Some(
                                Id {
                                    value: 5,
                                },
                            ),
                            comma: Some(
                                Comma,
                            ),
                        },
                    ],
                ),
            },
        ),
    ],
}
