---
source: crates/mabo-parser/tests/parser.rs
description: "struct Sample {\n    f1: Vec<u32> @1,\n    f2: HashMap<u32, String> @2,\n    f3: HashSet<u32> @3,\n    f4: Option<u32> @4,\n    f5: NonZero<u32> @5,\n}\n\nstruct SampleUnnamed(\n    Vec<u32> @1,\n    HashMap<u32, String> @2,\n    HashSet<u32> @3,\n    Option<u32> @4,\n    NonZero<u32> @5,\n)"
input_file: crates/mabo-parser/tests/inputs/types_generic.mabo
---
Schema {
    path: Some(
        "types_generic.mabo",
    ),
    source: "struct Sample {\n    f1: Vec<u32> @1,\n    f2: HashMap<u32, String> @2,\n    f3: HashSet<u32> @3,\n    f4: Option<u32> @4,\n    f5: NonZero<u32> @5,\n}\n\nstruct SampleUnnamed(\n    Vec<u32> @1,\n    HashMap<u32, String> @2,\n    HashSet<u32> @3,\n    Option<u32> @4,\n    NonZero<u32> @5,\n)\n",
    comment: Comment(
        [],
    ),
    definitions: [
        Struct(
            Struct {
                comment: Comment(
                    [],
                ),
                attributes: Attributes(
                    [],
                ),
                keyword: Struct,
                name: Name {
                    value: "Sample",
                },
                generics: None,
                fields: Named(
                    Brace,
                    Punctuated {
                        values: [
                            (
                                NamedField {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "f1",
                                    },
                                    colon: Colon,
                                    ty: Type {
                                        value: Vec {
                                            angle: Angle,
                                            ty: Type {
                                                value: U32,
                                            },
                                        },
                                    },
                                    id: Some(
                                        Id {
                                            value: 1,
                                        },
                                    ),
                                },
                                Comma,
                            ),
                            (
                                NamedField {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "f2",
                                    },
                                    colon: Colon,
                                    ty: Type {
                                        value: HashMap {
                                            angle: Angle,
                                            key: Type {
                                                value: U32,
                                            },
                                            comma: Comma,
                                            value: Type {
                                                value: String,
                                            },
                                        },
                                    },
                                    id: Some(
                                        Id {
                                            value: 2,
                                        },
                                    ),
                                },
                                Comma,
                            ),
                            (
                                NamedField {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "f3",
                                    },
                                    colon: Colon,
                                    ty: Type {
                                        value: HashSet {
                                            angle: Angle,
                                            ty: Type {
                                                value: U32,
                                            },
                                        },
                                    },
                                    id: Some(
                                        Id {
                                            value: 3,
                                        },
                                    ),
                                },
                                Comma,
                            ),
                            (
                                NamedField {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "f4",
                                    },
                                    colon: Colon,
                                    ty: Type {
                                        value: Option {
                                            angle: Angle,
                                            ty: Type {
                                                value: U32,
                                            },
                                        },
                                    },
                                    id: Some(
                                        Id {
                                            value: 4,
                                        },
                                    ),
                                },
                                Comma,
                            ),
                        ],
                        last: (
                            NamedField {
                                comment: Comment(
                                    [],
                                ),
                                name: Name {
                                    value: "f5",
                                },
                                colon: Colon,
                                ty: Type {
                                    value: NonZero {
                                        angle: Angle,
                                        ty: Type {
                                            value: U32,
                                        },
                                    },
                                },
                                id: Some(
                                    Id {
                                        value: 5,
                                    },
                                ),
                            },
                            Some(
                                Comma,
                            ),
                        ),
                    },
                ),
            },
        ),
        Struct(
            Struct {
                comment: Comment(
                    [],
                ),
                attributes: Attributes(
                    [],
                ),
                keyword: Struct,
                name: Name {
                    value: "SampleUnnamed",
                },
                generics: None,
                fields: Unnamed(
                    Parenthesis,
                    Punctuated {
                        values: [
                            (
                                UnnamedField {
                                    ty: Type {
                                        value: Vec {
                                            angle: Angle,
                                            ty: Type {
                                                value: U32,
                                            },
                                        },
                                    },
                                    id: Some(
                                        Id {
                                            value: 1,
                                        },
                                    ),
                                },
                                Comma,
                            ),
                            (
                                UnnamedField {
                                    ty: Type {
                                        value: HashMap {
                                            angle: Angle,
                                            key: Type {
                                                value: U32,
                                            },
                                            comma: Comma,
                                            value: Type {
                                                value: String,
                                            },
                                        },
                                    },
                                    id: Some(
                                        Id {
                                            value: 2,
                                        },
                                    ),
                                },
                                Comma,
                            ),
                            (
                                UnnamedField {
                                    ty: Type {
                                        value: HashSet {
                                            angle: Angle,
                                            ty: Type {
                                                value: U32,
                                            },
                                        },
                                    },
                                    id: Some(
                                        Id {
                                            value: 3,
                                        },
                                    ),
                                },
                                Comma,
                            ),
                            (
                                UnnamedField {
                                    ty: Type {
                                        value: Option {
                                            angle: Angle,
                                            ty: Type {
                                                value: U32,
                                            },
                                        },
                                    },
                                    id: Some(
                                        Id {
                                            value: 4,
                                        },
                                    ),
                                },
                                Comma,
                            ),
                        ],
                        last: (
                            UnnamedField {
                                ty: Type {
                                    value: NonZero {
                                        angle: Angle,
                                        ty: Type {
                                            value: U32,
                                        },
                                    },
                                },
                                id: Some(
                                    Id {
                                        value: 5,
                                    },
                                ),
                            },
                            Some(
                                Comma,
                            ),
                        ),
                    },
                ),
            },
        ),
    ],
}
