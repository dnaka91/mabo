---
source: crates/mabo-parser/tests/parser.rs
description: "struct Sample {\n    basic: Test123 @1,\n    with_generics: KeyValue<u32, bool> @2,\n}\n\nenum Test123 {\n    Value @1,\n}\n\nstruct KeyValue<K, V> {\n    key: K @1,\n    value: V @2,\n}"
input_file: crates/mabo-parser/tests/inputs/types_ref.mabo
---
Schema {
    path: Some(
        "types_ref.mabo",
    ),
    source: "struct Sample {\n    basic: Test123 @1,\n    with_generics: KeyValue<u32, bool> @2,\n}\n\nenum Test123 {\n    Value @1,\n}\n\nstruct KeyValue<K, V> {\n    key: K @1,\n    value: V @2,\n}\n",
    comment: Comment(
        [],
    ),
    definitions: [
        Struct(
            Struct {
                comment: Comment(
                    [],
                ),
                attributes: Attributes(
                    [],
                ),
                name: Name {
                    value: "Sample",
                },
                generics: Generics(
                    [],
                ),
                fields: Named(
                    [
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "basic",
                            },
                            ty: Type {
                                value: External(
                                    ExternalType {
                                        path: [],
                                        name: Name {
                                            value: "Test123",
                                        },
                                        generics: [],
                                    },
                                ),
                            },
                            id: Some(
                                Id {
                                    value: 1,
                                },
                            ),
                        },
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "with_generics",
                            },
                            ty: Type {
                                value: External(
                                    ExternalType {
                                        path: [],
                                        name: Name {
                                            value: "KeyValue",
                                        },
                                        generics: [
                                            Type {
                                                value: U32,
                                            },
                                            Type {
                                                value: Bool,
                                            },
                                        ],
                                    },
                                ),
                            },
                            id: Some(
                                Id {
                                    value: 2,
                                },
                            ),
                        },
                    ],
                ),
            },
        ),
        Enum(
            Enum {
                comment: Comment(
                    [],
                ),
                attributes: Attributes(
                    [],
                ),
                name: Name {
                    value: "Test123",
                },
                generics: Generics(
                    [],
                ),
                variants: [
                    Variant {
                        comment: Comment(
                            [],
                        ),
                        name: Name {
                            value: "Value",
                        },
                        fields: Unit,
                        id: Some(
                            Id {
                                value: 1,
                            },
                        ),
                    },
                ],
            },
        ),
        Struct(
            Struct {
                comment: Comment(
                    [],
                ),
                attributes: Attributes(
                    [],
                ),
                name: Name {
                    value: "KeyValue",
                },
                generics: Generics(
                    [
                        Name {
                            value: "K",
                        },
                        Name {
                            value: "V",
                        },
                    ],
                ),
                fields: Named(
                    [
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "key",
                            },
                            ty: Type {
                                value: External(
                                    ExternalType {
                                        path: [],
                                        name: Name {
                                            value: "K",
                                        },
                                        generics: [],
                                    },
                                ),
                            },
                            id: Some(
                                Id {
                                    value: 1,
                                },
                            ),
                        },
                        NamedField {
                            comment: Comment(
                                [],
                            ),
                            name: Name {
                                value: "value",
                            },
                            ty: Type {
                                value: External(
                                    ExternalType {
                                        path: [],
                                        name: Name {
                                            value: "V",
                                        },
                                        generics: [],
                                    },
                                ),
                            },
                            id: Some(
                                Id {
                                    value: 2,
                                },
                            ),
                        },
                    ],
                ),
            },
        ),
    ],
}
