---
source: crates/stef-parser/tests/parser.rs
expression: "Schema :: parse(input.as_str()).unwrap()"
input_file: crates/stef-parser/tests/inputs/const_basic.stef
---
Schema {
    definitions: [
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "BOOL_TRUE",
                    span: Span {
                        start: 6,
                        end: 15,
                    },
                },
                ty: Bool,
                value: Bool(
                    true,
                ),
            },
        ),
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "BOOL_FALSE",
                    span: Span {
                        start: 36,
                        end: 46,
                    },
                },
                ty: Bool,
                value: Bool(
                    false,
                ),
            },
        ),
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "INT",
                    span: Span {
                        start: 68,
                        end: 71,
                    },
                },
                ty: U32,
                value: Int(
                    100,
                ),
            },
        ),
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "FLOAT",
                    span: Span {
                        start: 90,
                        end: 95,
                    },
                },
                ty: F64,
                value: Float(
                    5.5,
                ),
            },
        ),
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "STRING",
                    span: Span {
                        start: 114,
                        end: 120,
                    },
                },
                ty: String,
                value: String(
                    "value",
                ),
            },
        ),
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "BYTES",
                    span: Span {
                        start: 146,
                        end: 151,
                    },
                },
                ty: Bytes,
                value: Bytes(
                    [
                        1,
                        2,
                        3,
                    ],
                ),
            },
        ),
    ],
}
