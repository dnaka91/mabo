---
source: crates/stef-parser/tests/parser.rs
description: "const BOOL_TRUE: bool = true;\nconst BOOL_FALSE: bool = false;\nconst INT: u32 = 100;\nconst FLOAT: f64 = 5.5;\nconst STRING: string = \"value\";\nconst BYTES: bytes = [1, 2, 3];"
input_file: crates/stef-parser/tests/inputs/const_basic.stef
---
Schema {
    path: Some(
        "const_basic.stef",
    ),
    source: "const BOOL_TRUE: bool = true;\nconst BOOL_FALSE: bool = false;\nconst INT: u32 = 100;\nconst FLOAT: f64 = 5.5;\nconst STRING: string = \"value\";\nconst BYTES: bytes = [1, 2, 3];\n",
    comment: Comment(
        [],
    ),
    definitions: [
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "BOOL_TRUE",
                },
                ty: Type {
                    value: Bool,
                },
                value: Literal {
                    value: Bool(
                        true,
                    ),
                },
            },
        ),
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "BOOL_FALSE",
                },
                ty: Type {
                    value: Bool,
                },
                value: Literal {
                    value: Bool(
                        false,
                    ),
                },
            },
        ),
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "INT",
                },
                ty: Type {
                    value: U32,
                },
                value: Literal {
                    value: Int(
                        100,
                    ),
                },
            },
        ),
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "FLOAT",
                },
                ty: Type {
                    value: F64,
                },
                value: Literal {
                    value: Float(
                        5.5,
                    ),
                },
            },
        ),
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "STRING",
                },
                ty: Type {
                    value: String,
                },
                value: Literal {
                    value: String(
                        "value",
                    ),
                },
            },
        ),
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "BYTES",
                },
                ty: Type {
                    value: Bytes,
                },
                value: Literal {
                    value: Bytes(
                        [
                            1,
                            2,
                            3,
                        ],
                    ),
                },
            },
        ),
    ],
}
