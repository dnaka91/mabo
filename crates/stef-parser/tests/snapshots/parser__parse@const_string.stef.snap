---
source: crates/stef-parser/tests/parser.rs
expression: "Schema :: parse(input.as_str()).unwrap()"
input_file: crates/stef-parser/tests/inputs/const_string.stef
---
Schema {
    definitions: [
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "SIMPLE",
                    span: Span {
                        start: 6,
                        end: 12,
                    },
                },
                ty: String,
                value: String(
                    "value",
                ),
            },
        ),
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "NEWLINE_ESCAPE",
                    span: Span {
                        start: 39,
                        end: 53,
                    },
                },
                ty: String,
                value: String(
                    "one two three",
                ),
            },
        ),
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "ESCAPES",
                    span: Span {
                        start: 102,
                        end: 109,
                    },
                },
                ty: String,
                value: String(
                    "escape basics \r\n \t \u{8} \u{c} \\ \"hello\" \nunicode ❤  emoji ❤ ",
                ),
            },
        ),
        Const(
            Const {
                comment: Comment(
                    [],
                ),
                name: Name {
                    value: "MULTILINE",
                    span: Span {
                        start: 222,
                        end: 231,
                    },
                },
                ty: String,
                value: String(
                    "a\n    b\n    c\n",
                ),
            },
        ),
    ],
}
