---
source: crates/stef-parser/tests/parser.rs
description: "/// Sample enum.\n enum     Sample    {\n\n       One      @1,\n\n       Two  (   u32   @1,     u64     @2)    @2,\n\n            Three     {\n\n                    field1:    u32      @1,\n\n                    field2:    bool     @2,\n\n            }    @3,\n\n }"
input_file: crates/stef-parser/tests/inputs/enum_many_ws.stef
---
Schema {
    path: Some(
        "enum_many_ws.stef",
    ),
    source: "\n /// Sample enum.\n enum     Sample    {\n\n       One      @1,\n\n       Two  (   u32   @1,     u64     @2)    @2,\n\n            Three     {\n\n                    field1:    u32      @1,\n\n                    field2:    bool     @2,\n\n            }    @3,\n\n }\n",
    comment: Comment(
        [],
    ),
    definitions: [
        Enum(
            Enum {
                comment: Comment(
                    [
                        CommentLine {
                            value: "Sample enum.",
                        },
                    ],
                ),
                attributes: Attributes(
                    [],
                ),
                name: Name {
                    value: "Sample",
                },
                generics: Generics(
                    [],
                ),
                variants: [
                    Variant {
                        comment: Comment(
                            [],
                        ),
                        name: Name {
                            value: "One",
                        },
                        fields: Unit,
                        id: Some(
                            Id {
                                value: 1,
                            },
                        ),
                    },
                    Variant {
                        comment: Comment(
                            [],
                        ),
                        name: Name {
                            value: "Two",
                        },
                        fields: Unnamed(
                            [
                                UnnamedField {
                                    ty: Type {
                                        value: U32,
                                    },
                                    id: Some(
                                        Id {
                                            value: 1,
                                        },
                                    ),
                                },
                                UnnamedField {
                                    ty: Type {
                                        value: U64,
                                    },
                                    id: Some(
                                        Id {
                                            value: 2,
                                        },
                                    ),
                                },
                            ],
                        ),
                        id: Some(
                            Id {
                                value: 2,
                            },
                        ),
                    },
                    Variant {
                        comment: Comment(
                            [],
                        ),
                        name: Name {
                            value: "Three",
                        },
                        fields: Named(
                            [
                                NamedField {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "field1",
                                    },
                                    ty: Type {
                                        value: U32,
                                    },
                                    id: Some(
                                        Id {
                                            value: 1,
                                        },
                                    ),
                                },
                                NamedField {
                                    comment: Comment(
                                        [],
                                    ),
                                    name: Name {
                                        value: "field2",
                                    },
                                    ty: Type {
                                        value: Bool,
                                    },
                                    id: Some(
                                        Id {
                                            value: 2,
                                        },
                                    ),
                                },
                            ],
                        ),
                        id: Some(
                            Id {
                                value: 3,
                            },
                        ),
                    },
                ],
            },
        ),
    ],
}
